import PushNotification from 'react-native-push-notification';

export default class NotifService {
    constructor() {
        this.configure();
        this.lastId = 0;
    }

    configure() {
        PushNotification.configure({
            // IOS ONLY (optional): default: all - Permissions to register.
            permissions: {
                alert: true,
                badge: true,
                sound: true,
            },

            // Should the initial notification be popped automatically
            // default: true
            popInitialNotification: true,

            /**
             * (optional) default: true
             * - Specified if permissions (ios) and token (android and ios) will requested or not,
             * - if not, you must call PushNotificationsHandler.requestPermissions() later
             */
            requestPermissions: true,
        });
    }

    localNotif(title, message) {
        this.lastId++;
        PushNotification.localNotification({
            /* Android Only Properties */
            id: `${this.lastId}`, // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
            autoCancel: true, // (optional) default: true
            largeIcon: 'app_logo', // (optional) default: "ic_launcher"
            smallIcon: 'app_logo', // (optional) default: "ic_notification" with fallback for "ic_launcher"
            color: 'red', // (optional) default: system default
            vibrate: true, // (optional) default: true
            vibration: 300, // vibration length in milliseconds, ignored if vibrate=false, default: 1000

            /* iOS only properties */
            alertAction: 'view', // (optional) default: view
            category: 'Makkii', // (optional) default: null
            userInfo: {}, // (optional) default: null (object containing additional notification data)
            number: 10,

            /* iOS and Android properties */
            title, // (optional)
            message, // (required)
            playSound: false, // (optional) default: true
            soundName: 'default', // (optional) Sound to play when the notification is shown. Value of 'default' plays the default sound. It can be set to a custom sound such as 'android.resource://com.xyz/raw/my_sound'. It will look for the 'my_sound' audio file in 'res/raw' directory and play it. default: 'default' (default sound is played)
        });
    }

    checkPermission(cbk) {
        return PushNotification.checkPermissions(cbk);
    }

    cancelNotif() {
        PushNotification.cancelLocalNotifications({ id: `${this.lastId}` });
    }

    cancelAll() {
        PushNotification.cancelAllLocalNotifications();
    }
}

export const Notification = new NotifService();
